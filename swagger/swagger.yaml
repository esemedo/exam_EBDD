openapi: 3.0.0
info:
  title: Exam_EBDD API
  version: 1.0.0
paths:
  /api/products:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                name_product:
                  type: string
                provider:
                  type: string
                references_product:
                  type: string
                stock:
                  type: integer
                price:
                  type: number
      responses:
        '201':
          description: Product created successfully
    put:
      summary: Update an existing product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                name_product:
                  type: string
                provider:
                  type: string
                references_product:
                  type: string
                stock:
                  type: integer
                price:
                  type: number
      responses:
        '200':
          description: Product updated successfully
    get:
      summary: Retrieve all products
      responses:
        '200':
          description: Products retrieved successfully
    delete:
      summary: Delete a product by its reference
      parameters:
        - name: references_product
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted successfully
  /api/products/{references_product}/orders:
    get:
      summary: Récupérer les commandes qui contient un produit précis
      description: Obtenir toutes les commandes qui contient un produit précis.
      parameters:
        - name: references_product
          in: path
          required: true
          description: La référence du produit.
          schema:
            type: string
      responses:
        '200':
          description: Liste des commandes qui contient le produit.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    number_order:
                      type: integer
                      description: L'ID de la commande.
                    total_price:
                      type: number
                      format: float
                      description: Le prix total de la commande.
                    date_order:
                      type: string
                      format: date-time
                      description: La date de la commande.
                    
        '400':
          description: Mauvaise requête (ex. référence non valide).
        '404':
          description: Client ou commandes non trouvées.
        '500':
          description: Erreur serveur interne.
  /api/categories:
    post:
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_category:
                  type: string
      responses:
        '201':
          description: Category created successfully
    put:
      summary: Update an existing category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_category:
                  type: string
                new_name_category:
                  type: string
      responses:
        '200':
          description: Category updated successfully
    get:
      summary: Retrieve all categories
      responses:
        '200':
          description: Categories retrieved successfully
    delete:
      summary: Delete a category by its name
      parameters:
        - name: name_category
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Category deleted successfully

  /api/providers:
    post:
      summary: Create a new provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_provider:
                  type: string
      responses:
        '201':
          description: Provider created successfully
    put:
      summary: Update an existing provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name_provider:
                  type: string
                new_name_provider:
                  type: string
      responses:
        '200':
          description: Provider updated successfully
    get:
      summary: Retrieve all providers
      responses:
        '200':
          description: Providers retrieved successfully
    delete:
      summary: Delete a provider by its name
      parameters:
        - name: name_provider
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Provider deleted successfully

  /api/orders:
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      quantity:
                        type: integer
      responses:
        '201':
          description: Order created successfully
    put:
      summary: Update an existing order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      quantity:
                        type: integer
                number_order:
                  type: string
      responses:
        '200':
          description: Order updated successfully
    get:
      summary: Retrieve all orders
      parameters:
        - name: start
          in: query
          required: false
          description: La date de début.
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: false
          description: La date de fin.
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Orders retrieved successfully
    delete:
      summary: Delete an order by its order number
      parameters:
        - name: number_order
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Order deleted successfully

  /api/clients:
    summary: Routes for managing clien
    post:
      summary: Create a new client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstname:
                  type: string
                lastname:
                  type: string
                address:
                  type: string
      responses:
        '201':
          description: Client created successfully
    put:
      summary: Update an existing client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                address:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Client updated successfully
    get:
      summary: Retrieve all clients
      responses:
        '200':
          description: Clients retrieved successfully
    delete:
      summary: Delete a client by their email
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Client deleted successfully
  /api/clients/{email}/orders:
    get:
      summary: Récupérer les commandes d'un client
      description: Obtenir toutes les commandes associées à un client en utilisant son adresse email.
      parameters:
        - name: email
          in: path
          required: true
          description: L'adresse email du client.
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Liste des commandes du client.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    number_order:
                      type: integer
                      description: L'ID de la commande.
                    total_price:
                      type: number
                      format: float
                      description: Le prix total de la commande.
                    date_order:
                      type: string
                      format: date-time
                      description: La date de la commande.
                    
        '400':
          description: Mauvaise requête (ex. email non valide).
        '404':
          description: Client ou commandes non trouvées.
        '500':
          description: Erreur serveur interne.
components: {
  securitySchemes: {
    ApiKeyAuth: {
      type: 'apiKey',
      in: 'header',
      name: 'x-api-key', 
    },
  },
}
security: [
      {
          ApiKeyAuth: [], 
      },
  ]